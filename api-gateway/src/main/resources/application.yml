spring:
  application:
    name: api-gateway

  main:
    web-application-type: reactive

  # Config gateway
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user-service/**
          metadata:
            cors:
              allowedOrigins: http://localhost:3000
              allowedMethods: '*'
              allowedHeaders:
                - x-origin
                - Origin
                - Content-Type
                - Authorization
#          filters:
#            - name: CircuitBreaker
#              args:
#                 name: user-service # service name circuitBreaker will monitor
#                 fallbackuri: forward:/userFallBack # uri as exception

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product-service/**
          metadata:
            cors:
              allowedOrigins: http://localhost:3000
              allowedMethods: '*'
              allowedHeaders:
                - Origin
                - Content-Type
                - Authorization

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order-service/**

server:
  port: 8080

eureka:
  client:
    register-with-eureka: true # Allow register with eureka
    fetch-registry: true # Allow get others from eureka
    service-url:
      defaultZone: http://localhost:8761/eureka/ # where services will be registered and found
    instance:
      hostname: localhost # hostname

management:
  endpoints:
    web:
      exposure:
        include: '*'

#hystrix:
#  command:
#    fallbackcmd:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 4000





